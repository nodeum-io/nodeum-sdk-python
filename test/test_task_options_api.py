# coding: utf-8

"""
    Nodeum API

    Nodeum API  # Filter parameters When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)    # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.task_options_api import TaskOptionsApi  # noqa: E501
from swagger_client.rest import ApiException


class TestTaskOptionsApi(unittest.TestCase):
    """TaskOptionsApi unit test stubs"""

    def setUp(self):
        self.api = swagger_client.api.task_options_api.TaskOptionsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_task_option(self):
        """Test case for create_task_option

        Creates a new task option.  # noqa: E501
        """
        pass

    def test_destroy_task_option(self):
        """Test case for destroy_task_option

        Destroys a specific task option.  # noqa: E501
        """
        pass

    def test_index_task_options(self):
        """Test case for index_task_options

        Lists all task options.  # noqa: E501
        """
        pass

    def test_show_task_option(self):
        """Test case for show_task_option

        Displays a specific task option.  # noqa: E501
        """
        pass

    def test_update_task_option(self):
        """Test case for update_task_option

        Updates a specific task option.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
