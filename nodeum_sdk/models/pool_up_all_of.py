# coding: utf-8

"""
    Nodeum API

    # About  This document describes the Nodeum API version 2:  If you are looking for any information about the product itself, reach the product website https://www.nodeum.io. You can also contact us at this email address : info@nodeum.io  # Filter parameters When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)    # noqa: E501

    The version of the OpenAPI document: 2.1.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from nodeum_sdk.configuration import Configuration


class PoolUpAllOf(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'tape_ids': 'list[int]',
        'nas_share_ids': 'list[int]',
        'cloud_bucket_ids': 'list[int]'
    }

    attribute_map = {
        'tape_ids': 'tape_ids',
        'nas_share_ids': 'nas_share_ids',
        'cloud_bucket_ids': 'cloud_bucket_ids'
    }

    def __init__(self, tape_ids=None, nas_share_ids=None, cloud_bucket_ids=None, local_vars_configuration=None):  # noqa: E501
        """PoolUpAllOf - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._tape_ids = None
        self._nas_share_ids = None
        self._cloud_bucket_ids = None
        self.discriminator = None

        if tape_ids is not None:
            self.tape_ids = tape_ids
        if nas_share_ids is not None:
            self.nas_share_ids = nas_share_ids
        if cloud_bucket_ids is not None:
            self.cloud_bucket_ids = cloud_bucket_ids

    @property
    def tape_ids(self):
        """Gets the tape_ids of this PoolUpAllOf.  # noqa: E501


        :return: The tape_ids of this PoolUpAllOf.  # noqa: E501
        :rtype: list[int]
        """
        return self._tape_ids

    @tape_ids.setter
    def tape_ids(self, tape_ids):
        """Sets the tape_ids of this PoolUpAllOf.


        :param tape_ids: The tape_ids of this PoolUpAllOf.  # noqa: E501
        :type: list[int]
        """

        self._tape_ids = tape_ids

    @property
    def nas_share_ids(self):
        """Gets the nas_share_ids of this PoolUpAllOf.  # noqa: E501


        :return: The nas_share_ids of this PoolUpAllOf.  # noqa: E501
        :rtype: list[int]
        """
        return self._nas_share_ids

    @nas_share_ids.setter
    def nas_share_ids(self, nas_share_ids):
        """Sets the nas_share_ids of this PoolUpAllOf.


        :param nas_share_ids: The nas_share_ids of this PoolUpAllOf.  # noqa: E501
        :type: list[int]
        """

        self._nas_share_ids = nas_share_ids

    @property
    def cloud_bucket_ids(self):
        """Gets the cloud_bucket_ids of this PoolUpAllOf.  # noqa: E501


        :return: The cloud_bucket_ids of this PoolUpAllOf.  # noqa: E501
        :rtype: list[int]
        """
        return self._cloud_bucket_ids

    @cloud_bucket_ids.setter
    def cloud_bucket_ids(self, cloud_bucket_ids):
        """Sets the cloud_bucket_ids of this PoolUpAllOf.


        :param cloud_bucket_ids: The cloud_bucket_ids of this PoolUpAllOf.  # noqa: E501
        :type: list[int]
        """

        self._cloud_bucket_ids = cloud_bucket_ids

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PoolUpAllOf):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, PoolUpAllOf):
            return True

        return self.to_dict() != other.to_dict()
